// Place your key bindings in this file to override the defaults
[
   
    // VSCodeで、エディタとターミナルを往復できるショートカットの定義
    // Place your key bindings in this file to override the defaultsauto[]
    {
        "key": "ctrl+oem_comma", // setting.jsonを開く
        "command": "workbench.action.openSettingsJson"
    },
    {
        "key": "f6", // デバッグをカーソル位置まで進めて止める
        "command": "-workbench.action.debug.pause",
        "when": "inDebugMode"
    },
    {
        "key": "f6", // デバッグをカーソル位置まで進めて止める
        "command": "editor.debug.action.runToCursor"
    },
    {
        "key": "ctrl+p", // クイックオープン時の次ファイル選択 (デフォルト削除)
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p", // クイックオープン時の前ファイル選択 (デフォルト削除)
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    //terminal 移動
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen",
        "when": "!terminalFocus"
    },
    // {
    //     "key": "ctrl+p",
    //     "command": "-workbench.action.quickOpen"
    // },
    {
        "key": "ctrl+n", // クイックオープン時の次ファイル選択
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+p", // クイックオープン時の前ファイル選択
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },

    // Insert Modeでのカーソル移動
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+h",
        "command": "cursorLeft",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "cursorDown",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "cursorUp",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.previousEditor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.toggleMaximizedPanel"
    },
/* -------------------------------------------------------------------------- */
/*                                  sidebar                                   */
/* -------------------------------------------------------------------------- */

    //サイドバー表示(toggle)
    {
        "key": "ctrl+Space ctrl+Space",
        "command":"workbench.action.toggleSidebarVisibility",
        "when": "!explorerViewletVisible && !searchViewletVisible && !inDebugMode && vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+Space ctrl+Space",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible && !searchViewletVisible && !inDebugMode && vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
    },

    // サイドバーからの移動 
    {
        "key": "space l",
        "command":"workbench.action.focusFirstEditorGroup",
        "when": "explorerViewletVisible && explorerViewletFocus && !editorFocus && !inQuickOpen"
    },
    // ファイル・フォルダ削除
    {
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "alt+cmd+backspace",
        "command": "-deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    // リネーム
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // 分割して開く
    {
        "key": "v",
        "command": "explorer.openToSide",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // コピー
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // ペースト
    {
        "key": "p",
        // "command": "filesExplorer.copyfilesExplorer.paste",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // sidebar, terminal, editor移動をvimっぽく
    {
        "key": "ctrl+a ctrl+s",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+a ctrl+s",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!filesExplorerFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.explorer.fileView.focus",
        "when": "!filesExplorerFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "filesExplorerFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.focus",
        "when": "editorTextFocus && && vim.mode == 'Normal"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.focus",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "home home",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "home home",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "home home",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel",
        "when": "terminalFocus"
    },
    // tmux
    {
        "key": "ctrl+a ctrl+h",
        "command": "workbench.action.focusLeftGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+l",
        "command": "workbench.action.focusRightGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+j",
        "command": "workbench.action.focusBelowGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+k",
        "command": "workbench.action.focusAboveGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a shift+\\",
        "command": "workbench.action.splitEditor",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a -",
        "command": "workbench.action.splitEditorOrthogonal",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+q",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a shift+q",
        "command": "workbench.action.closeEditorsAndGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+p",
        "command": "extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.gotoDeclaration",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    // Split Horizon
    {
        "key": "ctrl+a l",
        "command": "workbench.action.increaseViewWidth",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a h",
        "command": "workbench.action.decreaseViewWidth",
        "when": "editorFocus"
    }, // group width increase or decrease
    {
        "key": "ctrl+a j",
        "command": "workbench.action.increaseViewHeight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a k",
        "command": "workbench.action.decreaseViewHeight",
        "when": "editorFocus"
    }, // 宣言箇所に移動
    {
        "key": "ctrl+u ctrl+d",
        "command": "editor.action.goToDeclaration",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a shift+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    // ------------------------------ Tmux Terminal ------------------------------
    {
        "key": "ctrl+a shift+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    }, // split terminal in same Pane
    {
        "key": "ctrl+a -",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    }, // split terminal as New
    {
        "key": "ctrl+a l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    }, // focus terminal in same pane
    {
        "key": "ctrl+a shift+n",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a shift+p",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    }, // focus terminal to next different pane
    {
        "key": "ctrl+a q",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    }, // delete terminal
    {
        "key": "ctrl+a shift+k",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a shift+j",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    }, // change terminalSize
    {
        "key": "ctrl+a j",
        "command": "workbench.action.nextSideBarView",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+a n",
        "command": "workbench.action.nextSideBarView",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+a k",
        "command": "workbench.action.previousSideBarView",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+a p",
        "command": "workbench.action.previousSideBarView",
        "when": "sideBarFocus"
    },
]
